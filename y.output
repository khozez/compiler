   0  $accept : programa $end

   1  programa : nombrep '{' sentencias '}' ';'

   2  nombrep : ID

   3  sentencias : bloqueDeclarativa bloqueEjecutable

   4  control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'
   5          | FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'
   6          | FOR '(' ID ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'

   7  bloqueEjecutableFOR : bloqueEjecutableFOR ejecutables ';'
   8                      | bloqueEjecutableFOR BREAK ';'
   9                      | bloqueEjecutableFOR ':' BREAK ETIQUETA ';'
  10                      | ejecutables ';'
  11                      | BREAK ETIQUETA ';'
  12                      | BREAK ';'
  13                      | BREAK expresion ';'

  14  condicion_for : ID MAYORIGUAL expresion
  15                | ID MENORIGUAL expresion

  16  bloqueDeclarativa : bloqueDeclarativa declarativa
  17                    | declarativa

  18  bloqueEjecutable : bloqueEjecutable ejecutables ';'
  19                   | ejecutables ';'

  20  declarativa : variables
  21              | declaracion_funcion
  22              | listaconstantes

  23  declaracion_funcion : header_funcion '{' cuerpoFUN '}' ';'

  24  header_funcion : FUN ID '(' parametros ')' ':' tipo

  25  listaconstantes : listaconstantes ',' const
  26                  | const

  27  const : ID ASIGN VALOR ';'

  28  parametros : variable ',' variable
  29             | variable

  30  variable : tipo variables ',' ID
  31           | tipo ID

  32  variables : variables variable

  33  cuerpoFUN : bloqueEjecutable
  34            | retorno_funcion

  35  retorno_funcion : RETURN '(' retorno ')' ';'

  36  retorno : expresion

  37  ejecutables : ID ASIGN expresion
  38              | salida
  39              | seleccion
  40              | WHEN '(' condicion ')' THEN '{' sentencias '}'
  41              | control
  42              | ETIQUETA ':' control

  43  expresion : expresion '+' termino
  44            | expresion '-' termino
  45            | termino

  46  funcion : ID '(' parametrosreales ')'

  47  parametrosreales : factor ',' factor
  48                   | factor

  49  termino : termino '*' factor
  50          | termino '/' factor
  51          | factor

  52  factor : ID
  53         | funcion

  54  condicion : expresion MENORIGUAL expresion
  55            | expresion MAYORIGUAL expresion
  56            | expresion DISTINTO expresion
  57            | expresion IGUAL expresion

  58  seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF
  59            | IF '(' condicion ')' THEN '{' bloqueEjecutable '}' END_IF

  60  salida : OUT '(' CADENA ')'

  61  tipo : F
  62       | UI

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	.  error

	programa  goto 2
	nombrep  goto 3


state 1
	nombrep : ID .  (2)

	.  reduce 2


state 2
	$accept : programa . $end  (0)

	$end  accept


state 3
	programa : nombrep . '{' sentencias '}' ';'  (1)

	'{'  shift 4
	.  error


state 4
	programa : nombrep '{' . sentencias '}' ';'  (1)

	ID  shift 5
	FUN  shift 6
	.  error

	sentencias  goto 7
	bloqueDeclarativa  goto 8
	declarativa  goto 9
	variables  goto 10
	declaracion_funcion  goto 11
	listaconstantes  goto 12
	header_funcion  goto 13
	const  goto 14


state 5
	const : ID . ASIGN VALOR ';'  (27)

	ASIGN  shift 15
	.  error


state 6
	header_funcion : FUN . ID '(' parametros ')' ':' tipo  (24)

	ID  shift 16
	.  error


state 7
	programa : nombrep '{' sentencias . '}' ';'  (1)

	'}'  shift 17
	.  error


state 8
	sentencias : bloqueDeclarativa . bloqueEjecutable  (3)
	bloqueDeclarativa : bloqueDeclarativa . declarativa  (16)

	ID  shift 18
	IF  shift 19
	OUT  shift 20
	FUN  shift 6
	WHEN  shift 21
	FOR  shift 22
	ETIQUETA  shift 23
	.  error

	bloqueEjecutable  goto 24
	control  goto 25
	ejecutables  goto 26
	declarativa  goto 27
	variables  goto 10
	declaracion_funcion  goto 11
	listaconstantes  goto 12
	header_funcion  goto 13
	const  goto 14
	salida  goto 28
	seleccion  goto 29


state 9
	bloqueDeclarativa : declarativa .  (17)

	.  reduce 17


state 10
	declarativa : variables .  (20)
	variables : variables . variable  (32)

	UI  shift 30
	F  shift 31
	ID  reduce 20
	IF  reduce 20
	OUT  reduce 20
	FUN  reduce 20
	WHEN  reduce 20
	FOR  reduce 20
	ETIQUETA  reduce 20

	tipo  goto 32
	variable  goto 33


state 11
	declarativa : declaracion_funcion .  (21)

	.  reduce 21


state 12
	declarativa : listaconstantes .  (22)
	listaconstantes : listaconstantes . ',' const  (25)

	','  shift 34
	ID  reduce 22
	IF  reduce 22
	OUT  reduce 22
	FUN  reduce 22
	WHEN  reduce 22
	FOR  reduce 22
	ETIQUETA  reduce 22


state 13
	declaracion_funcion : header_funcion . '{' cuerpoFUN '}' ';'  (23)

	'{'  shift 35
	.  error


state 14
	listaconstantes : const .  (26)

	.  reduce 26


state 15
	const : ID ASIGN . VALOR ';'  (27)

	VALOR  shift 36
	.  error


state 16
	header_funcion : FUN ID . '(' parametros ')' ':' tipo  (24)

	'('  shift 37
	.  error


state 17
	programa : nombrep '{' sentencias '}' . ';'  (1)

	';'  shift 38
	.  error


state 18
	const : ID . ASIGN VALOR ';'  (27)
	ejecutables : ID . ASIGN expresion  (37)

	ASIGN  shift 39
	.  error


state 19
	seleccion : IF . '(' condicion ')' THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF  (58)
	seleccion : IF . '(' condicion ')' THEN '{' bloqueEjecutable '}' END_IF  (59)

	'('  shift 40
	.  error


state 20
	salida : OUT . '(' CADENA ')'  (60)

	'('  shift 41
	.  error


state 21
	ejecutables : WHEN . '(' condicion ')' THEN '{' sentencias '}'  (40)

	'('  shift 42
	.  error


state 22
	control : FOR . '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (4)
	control : FOR . '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (5)
	control : FOR . '(' ID ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (6)

	'('  shift 43
	.  error


state 23
	ejecutables : ETIQUETA . ':' control  (42)

	':'  shift 44
	.  error


state 24
	sentencias : bloqueDeclarativa bloqueEjecutable .  (3)
	bloqueEjecutable : bloqueEjecutable . ejecutables ';'  (18)

	ID  shift 45
	IF  shift 19
	OUT  shift 20
	WHEN  shift 21
	FOR  shift 22
	ETIQUETA  shift 23
	'}'  reduce 3

	control  goto 25
	ejecutables  goto 46
	salida  goto 28
	seleccion  goto 29


state 25
	ejecutables : control .  (41)

	.  reduce 41


state 26
	bloqueEjecutable : ejecutables . ';'  (19)

	';'  shift 47
	.  error


state 27
	bloqueDeclarativa : bloqueDeclarativa declarativa .  (16)

	.  reduce 16


state 28
	ejecutables : salida .  (38)

	.  reduce 38


state 29
	ejecutables : seleccion .  (39)

	.  reduce 39


state 30
	tipo : UI .  (62)

	.  reduce 62


state 31
	tipo : F .  (61)

	.  reduce 61


state 32
	variable : tipo . variables ',' ID  (30)
	variable : tipo . ID  (31)

	ID  shift 48
	.  error

	variables  goto 49


state 33
	variables : variables variable .  (32)

	.  reduce 32


state 34
	listaconstantes : listaconstantes ',' . const  (25)

	ID  shift 5
	.  error

	const  goto 50


state 35
	declaracion_funcion : header_funcion '{' . cuerpoFUN '}' ';'  (23)

	ID  shift 45
	IF  shift 19
	OUT  shift 20
	RETURN  shift 51
	WHEN  shift 21
	FOR  shift 22
	ETIQUETA  shift 23
	.  error

	bloqueEjecutable  goto 52
	control  goto 25
	ejecutables  goto 26
	cuerpoFUN  goto 53
	retorno_funcion  goto 54
	salida  goto 28
	seleccion  goto 29


state 36
	const : ID ASIGN VALOR . ';'  (27)

	';'  shift 55
	.  error


state 37
	header_funcion : FUN ID '(' . parametros ')' ':' tipo  (24)

	UI  shift 30
	F  shift 31
	.  error

	parametros  goto 56
	tipo  goto 32
	variable  goto 57


state 38
	programa : nombrep '{' sentencias '}' ';' .  (1)

	.  reduce 1


state 39
	const : ID ASIGN . VALOR ';'  (27)
	ejecutables : ID ASIGN . expresion  (37)

	ID  shift 58
	VALOR  shift 36
	.  error

	expresion  goto 59
	termino  goto 60
	funcion  goto 61
	factor  goto 62


state 40
	seleccion : IF '(' . condicion ')' THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF  (58)
	seleccion : IF '(' . condicion ')' THEN '{' bloqueEjecutable '}' END_IF  (59)

	ID  shift 58
	.  error

	expresion  goto 63
	condicion  goto 64
	termino  goto 60
	funcion  goto 61
	factor  goto 62


state 41
	salida : OUT '(' . CADENA ')'  (60)

	CADENA  shift 65
	.  error


state 42
	ejecutables : WHEN '(' . condicion ')' THEN '{' sentencias '}'  (40)

	ID  shift 58
	.  error

	expresion  goto 63
	condicion  goto 66
	termino  goto 60
	funcion  goto 61
	factor  goto 62


state 43
	control : FOR '(' . ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (4)
	control : FOR '(' . ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (5)
	control : FOR '(' . ID ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (6)

	ID  shift 67
	.  error


state 44
	ejecutables : ETIQUETA ':' . control  (42)

	FOR  shift 22
	.  error

	control  goto 68


state 45
	ejecutables : ID . ASIGN expresion  (37)

	ASIGN  shift 69
	.  error


state 46
	bloqueEjecutable : bloqueEjecutable ejecutables . ';'  (18)

	';'  shift 70
	.  error


state 47
	bloqueEjecutable : ejecutables ';' .  (19)

	.  reduce 19


state 48
	variable : tipo ID .  (31)

	.  reduce 31


state 49
	variable : tipo variables . ',' ID  (30)
	variables : variables . variable  (32)

	UI  shift 30
	F  shift 31
	','  shift 71
	.  error

	tipo  goto 32
	variable  goto 33


state 50
	listaconstantes : listaconstantes ',' const .  (25)

	.  reduce 25


state 51
	retorno_funcion : RETURN . '(' retorno ')' ';'  (35)

	'('  shift 72
	.  error


state 52
	bloqueEjecutable : bloqueEjecutable . ejecutables ';'  (18)
	cuerpoFUN : bloqueEjecutable .  (33)

	ID  shift 45
	IF  shift 19
	OUT  shift 20
	WHEN  shift 21
	FOR  shift 22
	ETIQUETA  shift 23
	'}'  reduce 33

	control  goto 25
	ejecutables  goto 46
	salida  goto 28
	seleccion  goto 29


state 53
	declaracion_funcion : header_funcion '{' cuerpoFUN . '}' ';'  (23)

	'}'  shift 73
	.  error


state 54
	cuerpoFUN : retorno_funcion .  (34)

	.  reduce 34


state 55
	const : ID ASIGN VALOR ';' .  (27)

	.  reduce 27


state 56
	header_funcion : FUN ID '(' parametros . ')' ':' tipo  (24)

	')'  shift 74
	.  error


state 57
	parametros : variable . ',' variable  (28)
	parametros : variable .  (29)

	','  shift 75
	')'  reduce 29


state 58
	funcion : ID . '(' parametrosreales ')'  (46)
	factor : ID .  (52)

	'('  shift 76
	MAYORIGUAL  reduce 52
	MENORIGUAL  reduce 52
	DISTINTO  reduce 52
	IGUAL  reduce 52
	'+'  reduce 52
	'-'  reduce 52
	'*'  reduce 52
	'/'  reduce 52
	';'  reduce 52
	')'  reduce 52
	','  reduce 52


state 59
	ejecutables : ID ASIGN expresion .  (37)
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)

	'+'  shift 77
	'-'  shift 78
	';'  reduce 37


state 60
	expresion : termino .  (45)
	termino : termino . '*' factor  (49)
	termino : termino . '/' factor  (50)

	'*'  shift 79
	'/'  shift 80
	MAYORIGUAL  reduce 45
	MENORIGUAL  reduce 45
	DISTINTO  reduce 45
	IGUAL  reduce 45
	'+'  reduce 45
	'-'  reduce 45
	';'  reduce 45
	')'  reduce 45


state 61
	factor : funcion .  (53)

	.  reduce 53


state 62
	termino : factor .  (51)

	.  reduce 51


state 63
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)
	condicion : expresion . MENORIGUAL expresion  (54)
	condicion : expresion . MAYORIGUAL expresion  (55)
	condicion : expresion . DISTINTO expresion  (56)
	condicion : expresion . IGUAL expresion  (57)

	MAYORIGUAL  shift 81
	MENORIGUAL  shift 82
	DISTINTO  shift 83
	IGUAL  shift 84
	'+'  shift 77
	'-'  shift 78
	.  error


state 64
	seleccion : IF '(' condicion . ')' THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF  (58)
	seleccion : IF '(' condicion . ')' THEN '{' bloqueEjecutable '}' END_IF  (59)

	')'  shift 85
	.  error


state 65
	salida : OUT '(' CADENA . ')'  (60)

	')'  shift 86
	.  error


state 66
	ejecutables : WHEN '(' condicion . ')' THEN '{' sentencias '}'  (40)

	')'  shift 87
	.  error


state 67
	control : FOR '(' ID . ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (4)
	control : FOR '(' ID . ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (5)
	control : FOR '(' ID . ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (6)

	ASIGN  shift 88
	.  error


state 68
	ejecutables : ETIQUETA ':' control .  (42)

	.  reduce 42


state 69
	ejecutables : ID ASIGN . expresion  (37)

	ID  shift 58
	.  error

	expresion  goto 59
	termino  goto 60
	funcion  goto 61
	factor  goto 62


state 70
	bloqueEjecutable : bloqueEjecutable ejecutables ';' .  (18)

	.  reduce 18


state 71
	variable : tipo variables ',' . ID  (30)

	ID  shift 89
	.  error


state 72
	retorno_funcion : RETURN '(' . retorno ')' ';'  (35)

	ID  shift 58
	.  error

	expresion  goto 90
	retorno  goto 91
	termino  goto 60
	funcion  goto 61
	factor  goto 62


state 73
	declaracion_funcion : header_funcion '{' cuerpoFUN '}' . ';'  (23)

	';'  shift 92
	.  error


state 74
	header_funcion : FUN ID '(' parametros ')' . ':' tipo  (24)

	':'  shift 93
	.  error


state 75
	parametros : variable ',' . variable  (28)

	UI  shift 30
	F  shift 31
	.  error

	tipo  goto 32
	variable  goto 94


state 76
	funcion : ID '(' . parametrosreales ')'  (46)

	ID  shift 58
	.  error

	funcion  goto 61
	parametrosreales  goto 95
	factor  goto 96


state 77
	expresion : expresion '+' . termino  (43)

	ID  shift 58
	.  error

	termino  goto 97
	funcion  goto 61
	factor  goto 62


state 78
	expresion : expresion '-' . termino  (44)

	ID  shift 58
	.  error

	termino  goto 98
	funcion  goto 61
	factor  goto 62


state 79
	termino : termino '*' . factor  (49)

	ID  shift 58
	.  error

	funcion  goto 61
	factor  goto 99


state 80
	termino : termino '/' . factor  (50)

	ID  shift 58
	.  error

	funcion  goto 61
	factor  goto 100


state 81
	condicion : expresion MAYORIGUAL . expresion  (55)

	ID  shift 58
	.  error

	expresion  goto 101
	termino  goto 60
	funcion  goto 61
	factor  goto 62


state 82
	condicion : expresion MENORIGUAL . expresion  (54)

	ID  shift 58
	.  error

	expresion  goto 102
	termino  goto 60
	funcion  goto 61
	factor  goto 62


state 83
	condicion : expresion DISTINTO . expresion  (56)

	ID  shift 58
	.  error

	expresion  goto 103
	termino  goto 60
	funcion  goto 61
	factor  goto 62


state 84
	condicion : expresion IGUAL . expresion  (57)

	ID  shift 58
	.  error

	expresion  goto 104
	termino  goto 60
	funcion  goto 61
	factor  goto 62


state 85
	seleccion : IF '(' condicion ')' . THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF  (58)
	seleccion : IF '(' condicion ')' . THEN '{' bloqueEjecutable '}' END_IF  (59)

	THEN  shift 105
	.  error


state 86
	salida : OUT '(' CADENA ')' .  (60)

	.  reduce 60


state 87
	ejecutables : WHEN '(' condicion ')' . THEN '{' sentencias '}'  (40)

	THEN  shift 106
	.  error


state 88
	control : FOR '(' ID ASIGN . VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (4)
	control : FOR '(' ID ASIGN . VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (5)
	control : FOR '(' ID ASIGN . VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (6)

	VALOR  shift 107
	.  error


state 89
	variable : tipo variables ',' ID .  (30)

	.  reduce 30


state 90
	retorno : expresion .  (36)
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)

	'+'  shift 77
	'-'  shift 78
	')'  reduce 36


state 91
	retorno_funcion : RETURN '(' retorno . ')' ';'  (35)

	')'  shift 108
	.  error


state 92
	declaracion_funcion : header_funcion '{' cuerpoFUN '}' ';' .  (23)

	.  reduce 23


state 93
	header_funcion : FUN ID '(' parametros ')' ':' . tipo  (24)

	UI  shift 30
	F  shift 31
	.  error

	tipo  goto 109


state 94
	parametros : variable ',' variable .  (28)

	.  reduce 28


state 95
	funcion : ID '(' parametrosreales . ')'  (46)

	')'  shift 110
	.  error


state 96
	parametrosreales : factor . ',' factor  (47)
	parametrosreales : factor .  (48)

	','  shift 111
	')'  reduce 48


state 97
	expresion : expresion '+' termino .  (43)
	termino : termino . '*' factor  (49)
	termino : termino . '/' factor  (50)

	'*'  shift 79
	'/'  shift 80
	MAYORIGUAL  reduce 43
	MENORIGUAL  reduce 43
	DISTINTO  reduce 43
	IGUAL  reduce 43
	'+'  reduce 43
	'-'  reduce 43
	';'  reduce 43
	')'  reduce 43


state 98
	expresion : expresion '-' termino .  (44)
	termino : termino . '*' factor  (49)
	termino : termino . '/' factor  (50)

	'*'  shift 79
	'/'  shift 80
	MAYORIGUAL  reduce 44
	MENORIGUAL  reduce 44
	DISTINTO  reduce 44
	IGUAL  reduce 44
	'+'  reduce 44
	'-'  reduce 44
	';'  reduce 44
	')'  reduce 44


state 99
	termino : termino '*' factor .  (49)

	.  reduce 49


state 100
	termino : termino '/' factor .  (50)

	.  reduce 50


state 101
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)
	condicion : expresion MAYORIGUAL expresion .  (55)

	'+'  shift 77
	'-'  shift 78
	')'  reduce 55


state 102
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)
	condicion : expresion MENORIGUAL expresion .  (54)

	'+'  shift 77
	'-'  shift 78
	')'  reduce 54


state 103
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)
	condicion : expresion DISTINTO expresion .  (56)

	'+'  shift 77
	'-'  shift 78
	')'  reduce 56


state 104
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)
	condicion : expresion IGUAL expresion .  (57)

	'+'  shift 77
	'-'  shift 78
	')'  reduce 57


state 105
	seleccion : IF '(' condicion ')' THEN . '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF  (58)
	seleccion : IF '(' condicion ')' THEN . '{' bloqueEjecutable '}' END_IF  (59)

	'{'  shift 112
	.  error


state 106
	ejecutables : WHEN '(' condicion ')' THEN . '{' sentencias '}'  (40)

	'{'  shift 113
	.  error


state 107
	control : FOR '(' ID ASIGN VALOR . ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (4)
	control : FOR '(' ID ASIGN VALOR . ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (5)
	control : FOR '(' ID ASIGN VALOR . ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (6)

	';'  shift 114
	.  error


state 108
	retorno_funcion : RETURN '(' retorno ')' . ';'  (35)

	';'  shift 115
	.  error


state 109
	header_funcion : FUN ID '(' parametros ')' ':' tipo .  (24)

	.  reduce 24


state 110
	funcion : ID '(' parametrosreales ')' .  (46)

	.  reduce 46


state 111
	parametrosreales : factor ',' . factor  (47)

	ID  shift 58
	.  error

	funcion  goto 61
	factor  goto 116


state 112
	seleccion : IF '(' condicion ')' THEN '{' . bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF  (58)
	seleccion : IF '(' condicion ')' THEN '{' . bloqueEjecutable '}' END_IF  (59)

	ID  shift 45
	IF  shift 19
	OUT  shift 20
	WHEN  shift 21
	FOR  shift 22
	ETIQUETA  shift 23
	.  error

	bloqueEjecutable  goto 117
	control  goto 25
	ejecutables  goto 26
	salida  goto 28
	seleccion  goto 29


state 113
	ejecutables : WHEN '(' condicion ')' THEN '{' . sentencias '}'  (40)

	ID  shift 5
	FUN  shift 6
	.  error

	sentencias  goto 118
	bloqueDeclarativa  goto 8
	declarativa  goto 9
	variables  goto 10
	declaracion_funcion  goto 11
	listaconstantes  goto 12
	header_funcion  goto 13
	const  goto 14


state 114
	control : FOR '(' ID ASIGN VALOR ';' . condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (4)
	control : FOR '(' ID ASIGN VALOR ';' . condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (5)
	control : FOR '(' ID ASIGN VALOR ';' . condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (6)

	ID  shift 119
	.  error

	condicion_for  goto 120


state 115
	retorno_funcion : RETURN '(' retorno ')' ';' .  (35)

	.  reduce 35


state 116
	parametrosreales : factor ',' factor .  (47)

	.  reduce 47


state 117
	bloqueEjecutable : bloqueEjecutable . ejecutables ';'  (18)
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable . '}' ELSE '{' bloqueEjecutable '}' END_IF  (58)
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable . '}' END_IF  (59)

	ID  shift 45
	IF  shift 19
	OUT  shift 20
	WHEN  shift 21
	FOR  shift 22
	ETIQUETA  shift 23
	'}'  shift 121
	.  error

	control  goto 25
	ejecutables  goto 46
	salida  goto 28
	seleccion  goto 29


state 118
	ejecutables : WHEN '(' condicion ')' THEN '{' sentencias . '}'  (40)

	'}'  shift 122
	.  error


state 119
	condicion_for : ID . MAYORIGUAL expresion  (14)
	condicion_for : ID . MENORIGUAL expresion  (15)

	MAYORIGUAL  shift 123
	MENORIGUAL  shift 124
	.  error


state 120
	control : FOR '(' ID ASIGN VALOR ';' condicion_for . ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (4)
	control : FOR '(' ID ASIGN VALOR ';' condicion_for . ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (5)
	control : FOR '(' ID ASIGN VALOR ';' condicion_for . ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (6)

	';'  shift 125
	.  error


state 121
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' . ELSE '{' bloqueEjecutable '}' END_IF  (58)
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' . END_IF  (59)

	ELSE  shift 126
	END_IF  shift 127
	.  error


state 122
	ejecutables : WHEN '(' condicion ')' THEN '{' sentencias '}' .  (40)

	.  reduce 40


state 123
	condicion_for : ID MAYORIGUAL . expresion  (14)

	ID  shift 58
	.  error

	expresion  goto 128
	termino  goto 60
	funcion  goto 61
	factor  goto 62


state 124
	condicion_for : ID MENORIGUAL . expresion  (15)

	ID  shift 58
	.  error

	expresion  goto 129
	termino  goto 60
	funcion  goto 61
	factor  goto 62


state 125
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' . '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (4)
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' . '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (5)
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' . VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (6)

	VALOR  shift 130
	'+'  shift 131
	'-'  shift 132
	.  error


state 126
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' ELSE . '{' bloqueEjecutable '}' END_IF  (58)

	'{'  shift 133
	.  error


state 127
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' END_IF .  (59)

	.  reduce 59


state 128
	condicion_for : ID MAYORIGUAL expresion .  (14)
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)

	'+'  shift 77
	'-'  shift 78
	';'  reduce 14


state 129
	condicion_for : ID MENORIGUAL expresion .  (15)
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)

	'+'  shift 77
	'-'  shift 78
	';'  reduce 15


state 130
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' VALOR . ')' '{' bloqueEjecutableFOR '}' ';'  (6)

	')'  shift 134
	.  error


state 131
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' . VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (4)

	VALOR  shift 135
	.  error


state 132
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' . VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (5)

	VALOR  shift 136
	.  error


state 133
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' ELSE '{' . bloqueEjecutable '}' END_IF  (58)

	ID  shift 45
	IF  shift 19
	OUT  shift 20
	WHEN  shift 21
	FOR  shift 22
	ETIQUETA  shift 23
	.  error

	bloqueEjecutable  goto 137
	control  goto 25
	ejecutables  goto 26
	salida  goto 28
	seleccion  goto 29


state 134
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' VALOR ')' . '{' bloqueEjecutableFOR '}' ';'  (6)

	'{'  shift 138
	.  error


state 135
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR . ')' '{' bloqueEjecutableFOR '}' ';'  (4)

	')'  shift 139
	.  error


state 136
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR . ')' '{' bloqueEjecutableFOR '}' ';'  (5)

	')'  shift 140
	.  error


state 137
	bloqueEjecutable : bloqueEjecutable . ejecutables ';'  (18)
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable . '}' END_IF  (58)

	ID  shift 45
	IF  shift 19
	OUT  shift 20
	WHEN  shift 21
	FOR  shift 22
	ETIQUETA  shift 23
	'}'  shift 141
	.  error

	control  goto 25
	ejecutables  goto 46
	salida  goto 28
	seleccion  goto 29


state 138
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' . bloqueEjecutableFOR '}' ';'  (6)

	ID  shift 45
	IF  shift 19
	OUT  shift 20
	BREAK  shift 142
	WHEN  shift 21
	FOR  shift 22
	ETIQUETA  shift 23
	.  error

	control  goto 25
	bloqueEjecutableFOR  goto 143
	ejecutables  goto 144
	salida  goto 28
	seleccion  goto 29


state 139
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' . '{' bloqueEjecutableFOR '}' ';'  (4)

	'{'  shift 145
	.  error


state 140
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' . '{' bloqueEjecutableFOR '}' ';'  (5)

	'{'  shift 146
	.  error


state 141
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' . END_IF  (58)

	END_IF  shift 147
	.  error


state 142
	bloqueEjecutableFOR : BREAK . ETIQUETA ';'  (11)
	bloqueEjecutableFOR : BREAK . ';'  (12)
	bloqueEjecutableFOR : BREAK . expresion ';'  (13)

	ID  shift 58
	ETIQUETA  shift 148
	';'  shift 149
	.  error

	expresion  goto 150
	termino  goto 60
	funcion  goto 61
	factor  goto 62


state 143
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR . '}' ';'  (6)
	bloqueEjecutableFOR : bloqueEjecutableFOR . ejecutables ';'  (7)
	bloqueEjecutableFOR : bloqueEjecutableFOR . BREAK ';'  (8)
	bloqueEjecutableFOR : bloqueEjecutableFOR . ':' BREAK ETIQUETA ';'  (9)

	ID  shift 45
	IF  shift 19
	OUT  shift 20
	BREAK  shift 151
	WHEN  shift 21
	FOR  shift 22
	ETIQUETA  shift 23
	'}'  shift 152
	':'  shift 153
	.  error

	control  goto 25
	ejecutables  goto 154
	salida  goto 28
	seleccion  goto 29


state 144
	bloqueEjecutableFOR : ejecutables . ';'  (10)

	';'  shift 155
	.  error


state 145
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' . bloqueEjecutableFOR '}' ';'  (4)

	ID  shift 45
	IF  shift 19
	OUT  shift 20
	BREAK  shift 142
	WHEN  shift 21
	FOR  shift 22
	ETIQUETA  shift 23
	.  error

	control  goto 25
	bloqueEjecutableFOR  goto 156
	ejecutables  goto 144
	salida  goto 28
	seleccion  goto 29


state 146
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' . bloqueEjecutableFOR '}' ';'  (5)

	ID  shift 45
	IF  shift 19
	OUT  shift 20
	BREAK  shift 142
	WHEN  shift 21
	FOR  shift 22
	ETIQUETA  shift 23
	.  error

	control  goto 25
	bloqueEjecutableFOR  goto 157
	ejecutables  goto 144
	salida  goto 28
	seleccion  goto 29


state 147
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF .  (58)

	.  reduce 58


state 148
	bloqueEjecutableFOR : BREAK ETIQUETA . ';'  (11)

	';'  shift 158
	.  error


state 149
	bloqueEjecutableFOR : BREAK ';' .  (12)

	.  reduce 12


state 150
	bloqueEjecutableFOR : BREAK expresion . ';'  (13)
	expresion : expresion . '+' termino  (43)
	expresion : expresion . '-' termino  (44)

	'+'  shift 77
	'-'  shift 78
	';'  shift 159
	.  error


state 151
	bloqueEjecutableFOR : bloqueEjecutableFOR BREAK . ';'  (8)

	';'  shift 160
	.  error


state 152
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' . ';'  (6)

	';'  shift 161
	.  error


state 153
	bloqueEjecutableFOR : bloqueEjecutableFOR ':' . BREAK ETIQUETA ';'  (9)

	BREAK  shift 162
	.  error


state 154
	bloqueEjecutableFOR : bloqueEjecutableFOR ejecutables . ';'  (7)

	';'  shift 163
	.  error


state 155
	bloqueEjecutableFOR : ejecutables ';' .  (10)

	.  reduce 10


state 156
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR . '}' ';'  (4)
	bloqueEjecutableFOR : bloqueEjecutableFOR . ejecutables ';'  (7)
	bloqueEjecutableFOR : bloqueEjecutableFOR . BREAK ';'  (8)
	bloqueEjecutableFOR : bloqueEjecutableFOR . ':' BREAK ETIQUETA ';'  (9)

	ID  shift 45
	IF  shift 19
	OUT  shift 20
	BREAK  shift 151
	WHEN  shift 21
	FOR  shift 22
	ETIQUETA  shift 23
	'}'  shift 164
	':'  shift 153
	.  error

	control  goto 25
	ejecutables  goto 154
	salida  goto 28
	seleccion  goto 29


state 157
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR . '}' ';'  (5)
	bloqueEjecutableFOR : bloqueEjecutableFOR . ejecutables ';'  (7)
	bloqueEjecutableFOR : bloqueEjecutableFOR . BREAK ';'  (8)
	bloqueEjecutableFOR : bloqueEjecutableFOR . ':' BREAK ETIQUETA ';'  (9)

	ID  shift 45
	IF  shift 19
	OUT  shift 20
	BREAK  shift 151
	WHEN  shift 21
	FOR  shift 22
	ETIQUETA  shift 23
	'}'  shift 165
	':'  shift 153
	.  error

	control  goto 25
	ejecutables  goto 154
	salida  goto 28
	seleccion  goto 29


state 158
	bloqueEjecutableFOR : BREAK ETIQUETA ';' .  (11)

	.  reduce 11


state 159
	bloqueEjecutableFOR : BREAK expresion ';' .  (13)

	.  reduce 13


state 160
	bloqueEjecutableFOR : bloqueEjecutableFOR BREAK ';' .  (8)

	.  reduce 8


state 161
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';' .  (6)

	.  reduce 6


state 162
	bloqueEjecutableFOR : bloqueEjecutableFOR ':' BREAK . ETIQUETA ';'  (9)

	ETIQUETA  shift 166
	.  error


state 163
	bloqueEjecutableFOR : bloqueEjecutableFOR ejecutables ';' .  (7)

	.  reduce 7


state 164
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' . ';'  (4)

	';'  shift 167
	.  error


state 165
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' . ';'  (5)

	';'  shift 168
	.  error


state 166
	bloqueEjecutableFOR : bloqueEjecutableFOR ':' BREAK ETIQUETA . ';'  (9)

	';'  shift 169
	.  error


state 167
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';' .  (4)

	.  reduce 4


state 168
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';' .  (5)

	.  reduce 5


state 169
	bloqueEjecutableFOR : bloqueEjecutableFOR ':' BREAK ETIQUETA ';' .  (9)

	.  reduce 9


34 terminals, 30 nonterminals
63 grammar rules, 170 states
