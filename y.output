   0  $accept : programa $end

   1  programa : nombrep '{' sentencias '}' ';'

   2  nombrep : ID

   3  sentencias : sentencias sentencia
   4             | sentencia

   5  sentencia : bloqueDeclarativa
   6            | bloqueEjecutable
   7            | control
   8            | seleccion
   9            | ETIQUETA ':' control

  10  control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'
  11          | FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'
  12          | FOR '(' ID ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'

  13  bloqueEjecutableFOR : bloqueEjecutableFOR ejecutables ';'
  14                      | bloqueEjecutableFOR BREAK ';'
  15                      | bloqueEjecutableFOR ':' BREAK ETIQUETA ';'
  16                      | ejecutables ';'
  17                      | BREAK ETIQUETA ';'
  18                      | BREAK ';'
  19                      | BREAK expresion ';'

  20  condicion_for : ID MAYORIGUAL expresion
  21                | ID MENORIGUAL expresion

  22  bloqueDeclarativa : bloqueDeclarativa declarativa
  23                    | declarativa

  24  bloqueEjecutable : bloqueEjecutable ejecutables ';'
  25                   | ejecutables ';'

  26  declarativa : variables
  27              | declaracion_funcion
  28              | listaconstantes

  29  declaracion_funcion : header_funcion '{' cuerpoFUN '}' ';'

  30  header_funcion : FUN ID '(' parametros ')' ':' tipo

  31  listaconstantes : listaconstantes ',' const
  32                  | const

  33  const : ID ASIGN VALOR ';'

  34  parametros : variable ',' variable
  35             | variable

  36  variable : tipo variables ',' ID
  37           | tipo ID

  38  variables : variables variable

  39  cuerpoFUN : bloqueEjecutable
  40            | retorno_funcion

  41  retorno_funcion : RETURN '(' retorno ')' ';'

  42  retorno : expresion

  43  ejecutables : ID ASIGN expresion
  44              | salida
  45              | seleccion
  46              | WHEN '(' condicion ')' THEN '{' sentencias '}'

  47  expresion : expresion '+' termino
  48            | expresion '-' termino
  49            | termino

  50  funcion : ID '(' parametrosreales ')'

  51  parametrosreales : factor ',' factor
  52                   | factor

  53  termino : termino '*' factor
  54          | termino '/' factor
  55          | factor

  56  factor : ID
  57         | funcion

  58  condicion : expresion MENORIGUAL expresion
  59            | expresion MAYORIGUAL expresion
  60            | expresion DISTINTO expresion
  61            | expresion IGUAL expresion

  62  seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF
  63            | IF '(' condicion ')' THEN '{' bloqueEjecutable '}' END_IF

  64  salida : OUT '(' CADENA ')'

  65  tipo : F
  66       | UI

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	.  error

	programa  goto 2
	nombrep  goto 3


state 1
	nombrep : ID .  (2)

	.  reduce 2


state 2
	$accept : programa . $end  (0)

	$end  accept


state 3
	programa : nombrep . '{' sentencias '}' ';'  (1)

	'{'  shift 4
	.  error


state 4
	programa : nombrep '{' . sentencias '}' ';'  (1)

	ID  shift 5
	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	FOR  shift 10
	ETIQUETA  shift 11
	.  error

	sentencias  goto 12
	sentencia  goto 13
	bloqueDeclarativa  goto 14
	bloqueEjecutable  goto 15
	control  goto 16
	seleccion  goto 17
	ejecutables  goto 18
	declarativa  goto 19
	variables  goto 20
	declaracion_funcion  goto 21
	listaconstantes  goto 22
	header_funcion  goto 23
	const  goto 24
	salida  goto 25


state 5
	const : ID . ASIGN VALOR ';'  (33)
	ejecutables : ID . ASIGN expresion  (43)

	ASIGN  shift 26
	.  error


state 6
	seleccion : IF . '(' condicion ')' THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF  (62)
	seleccion : IF . '(' condicion ')' THEN '{' bloqueEjecutable '}' END_IF  (63)

	'('  shift 27
	.  error


state 7
	salida : OUT . '(' CADENA ')'  (64)

	'('  shift 28
	.  error


state 8
	header_funcion : FUN . ID '(' parametros ')' ':' tipo  (30)

	ID  shift 29
	.  error


state 9
	ejecutables : WHEN . '(' condicion ')' THEN '{' sentencias '}'  (46)

	'('  shift 30
	.  error


state 10
	control : FOR . '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (10)
	control : FOR . '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (11)
	control : FOR . '(' ID ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (12)

	'('  shift 31
	.  error


state 11
	sentencia : ETIQUETA . ':' control  (9)

	':'  shift 32
	.  error


state 12
	programa : nombrep '{' sentencias . '}' ';'  (1)
	sentencias : sentencias . sentencia  (3)

	ID  shift 5
	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	FOR  shift 10
	ETIQUETA  shift 11
	'}'  shift 33
	.  error

	sentencia  goto 34
	bloqueDeclarativa  goto 14
	bloqueEjecutable  goto 15
	control  goto 16
	seleccion  goto 17
	ejecutables  goto 18
	declarativa  goto 19
	variables  goto 20
	declaracion_funcion  goto 21
	listaconstantes  goto 22
	header_funcion  goto 23
	const  goto 24
	salida  goto 25


state 13
	sentencias : sentencia .  (4)

	.  reduce 4


14: shift/reduce conflict (shift 35, reduce 5) on ID
14: shift/reduce conflict (shift 8, reduce 5) on FUN
state 14
	sentencia : bloqueDeclarativa .  (5)
	bloqueDeclarativa : bloqueDeclarativa . declarativa  (22)

	ID  shift 35
	FUN  shift 8
	IF  reduce 5
	OUT  reduce 5
	WHEN  reduce 5
	FOR  reduce 5
	ETIQUETA  reduce 5
	'}'  reduce 5

	declarativa  goto 36
	variables  goto 20
	declaracion_funcion  goto 21
	listaconstantes  goto 22
	header_funcion  goto 23
	const  goto 24


15: shift/reduce conflict (shift 37, reduce 6) on ID
15: shift/reduce conflict (shift 6, reduce 6) on IF
15: shift/reduce conflict (shift 7, reduce 6) on OUT
15: shift/reduce conflict (shift 9, reduce 6) on WHEN
state 15
	sentencia : bloqueEjecutable .  (6)
	bloqueEjecutable : bloqueEjecutable . ejecutables ';'  (24)

	ID  shift 37
	IF  shift 6
	OUT  shift 7
	WHEN  shift 9
	FUN  reduce 6
	FOR  reduce 6
	ETIQUETA  reduce 6
	'}'  reduce 6

	seleccion  goto 38
	ejecutables  goto 39
	salida  goto 25


state 16
	sentencia : control .  (7)

	.  reduce 7


state 17
	sentencia : seleccion .  (8)
	ejecutables : seleccion .  (45)

	ID  reduce 8
	IF  reduce 8
	OUT  reduce 8
	FUN  reduce 8
	WHEN  reduce 8
	FOR  reduce 8
	ETIQUETA  reduce 8
	'}'  reduce 8
	';'  reduce 45


state 18
	bloqueEjecutable : ejecutables . ';'  (25)

	';'  shift 40
	.  error


state 19
	bloqueDeclarativa : declarativa .  (23)

	.  reduce 23


state 20
	declarativa : variables .  (26)
	variables : variables . variable  (38)

	UI  shift 41
	F  shift 42
	ID  reduce 26
	IF  reduce 26
	OUT  reduce 26
	FUN  reduce 26
	WHEN  reduce 26
	FOR  reduce 26
	ETIQUETA  reduce 26
	'}'  reduce 26

	tipo  goto 43
	variable  goto 44


state 21
	declarativa : declaracion_funcion .  (27)

	.  reduce 27


state 22
	declarativa : listaconstantes .  (28)
	listaconstantes : listaconstantes . ',' const  (31)

	','  shift 45
	ID  reduce 28
	IF  reduce 28
	OUT  reduce 28
	FUN  reduce 28
	WHEN  reduce 28
	FOR  reduce 28
	ETIQUETA  reduce 28
	'}'  reduce 28


state 23
	declaracion_funcion : header_funcion . '{' cuerpoFUN '}' ';'  (29)

	'{'  shift 46
	.  error


state 24
	listaconstantes : const .  (32)

	.  reduce 32


state 25
	ejecutables : salida .  (44)

	.  reduce 44


state 26
	const : ID ASIGN . VALOR ';'  (33)
	ejecutables : ID ASIGN . expresion  (43)

	ID  shift 47
	VALOR  shift 48
	.  error

	expresion  goto 49
	termino  goto 50
	funcion  goto 51
	factor  goto 52


state 27
	seleccion : IF '(' . condicion ')' THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF  (62)
	seleccion : IF '(' . condicion ')' THEN '{' bloqueEjecutable '}' END_IF  (63)

	ID  shift 47
	.  error

	expresion  goto 53
	condicion  goto 54
	termino  goto 50
	funcion  goto 51
	factor  goto 52


state 28
	salida : OUT '(' . CADENA ')'  (64)

	CADENA  shift 55
	.  error


state 29
	header_funcion : FUN ID . '(' parametros ')' ':' tipo  (30)

	'('  shift 56
	.  error


state 30
	ejecutables : WHEN '(' . condicion ')' THEN '{' sentencias '}'  (46)

	ID  shift 47
	.  error

	expresion  goto 53
	condicion  goto 57
	termino  goto 50
	funcion  goto 51
	factor  goto 52


state 31
	control : FOR '(' . ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (10)
	control : FOR '(' . ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (11)
	control : FOR '(' . ID ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (12)

	ID  shift 58
	.  error


state 32
	sentencia : ETIQUETA ':' . control  (9)

	FOR  shift 10
	.  error

	control  goto 59


state 33
	programa : nombrep '{' sentencias '}' . ';'  (1)

	';'  shift 60
	.  error


state 34
	sentencias : sentencias sentencia .  (3)

	.  reduce 3


state 35
	const : ID . ASIGN VALOR ';'  (33)

	ASIGN  shift 61
	.  error


state 36
	bloqueDeclarativa : bloqueDeclarativa declarativa .  (22)

	.  reduce 22


state 37
	ejecutables : ID . ASIGN expresion  (43)

	ASIGN  shift 62
	.  error


state 38
	ejecutables : seleccion .  (45)

	.  reduce 45


state 39
	bloqueEjecutable : bloqueEjecutable ejecutables . ';'  (24)

	';'  shift 63
	.  error


state 40
	bloqueEjecutable : ejecutables ';' .  (25)

	.  reduce 25


state 41
	tipo : UI .  (66)

	.  reduce 66


state 42
	tipo : F .  (65)

	.  reduce 65


state 43
	variable : tipo . variables ',' ID  (36)
	variable : tipo . ID  (37)

	ID  shift 64
	.  error

	variables  goto 65


state 44
	variables : variables variable .  (38)

	.  reduce 38


state 45
	listaconstantes : listaconstantes ',' . const  (31)

	ID  shift 35
	.  error

	const  goto 66


state 46
	declaracion_funcion : header_funcion '{' . cuerpoFUN '}' ';'  (29)

	ID  shift 37
	IF  shift 6
	OUT  shift 7
	RETURN  shift 67
	WHEN  shift 9
	.  error

	bloqueEjecutable  goto 68
	seleccion  goto 38
	ejecutables  goto 18
	cuerpoFUN  goto 69
	retorno_funcion  goto 70
	salida  goto 25


state 47
	funcion : ID . '(' parametrosreales ')'  (50)
	factor : ID .  (56)

	'('  shift 71
	MAYORIGUAL  reduce 56
	MENORIGUAL  reduce 56
	DISTINTO  reduce 56
	IGUAL  reduce 56
	'+'  reduce 56
	'-'  reduce 56
	'*'  reduce 56
	'/'  reduce 56
	';'  reduce 56
	')'  reduce 56
	','  reduce 56


state 48
	const : ID ASIGN VALOR . ';'  (33)

	';'  shift 72
	.  error


state 49
	ejecutables : ID ASIGN expresion .  (43)
	expresion : expresion . '+' termino  (47)
	expresion : expresion . '-' termino  (48)

	'+'  shift 73
	'-'  shift 74
	';'  reduce 43


state 50
	expresion : termino .  (49)
	termino : termino . '*' factor  (53)
	termino : termino . '/' factor  (54)

	'*'  shift 75
	'/'  shift 76
	MAYORIGUAL  reduce 49
	MENORIGUAL  reduce 49
	DISTINTO  reduce 49
	IGUAL  reduce 49
	'+'  reduce 49
	'-'  reduce 49
	';'  reduce 49
	')'  reduce 49


state 51
	factor : funcion .  (57)

	.  reduce 57


state 52
	termino : factor .  (55)

	.  reduce 55


state 53
	expresion : expresion . '+' termino  (47)
	expresion : expresion . '-' termino  (48)
	condicion : expresion . MENORIGUAL expresion  (58)
	condicion : expresion . MAYORIGUAL expresion  (59)
	condicion : expresion . DISTINTO expresion  (60)
	condicion : expresion . IGUAL expresion  (61)

	MAYORIGUAL  shift 77
	MENORIGUAL  shift 78
	DISTINTO  shift 79
	IGUAL  shift 80
	'+'  shift 73
	'-'  shift 74
	.  error


state 54
	seleccion : IF '(' condicion . ')' THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF  (62)
	seleccion : IF '(' condicion . ')' THEN '{' bloqueEjecutable '}' END_IF  (63)

	')'  shift 81
	.  error


state 55
	salida : OUT '(' CADENA . ')'  (64)

	')'  shift 82
	.  error


state 56
	header_funcion : FUN ID '(' . parametros ')' ':' tipo  (30)

	UI  shift 41
	F  shift 42
	.  error

	parametros  goto 83
	tipo  goto 43
	variable  goto 84


state 57
	ejecutables : WHEN '(' condicion . ')' THEN '{' sentencias '}'  (46)

	')'  shift 85
	.  error


state 58
	control : FOR '(' ID . ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (10)
	control : FOR '(' ID . ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (11)
	control : FOR '(' ID . ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (12)

	ASIGN  shift 86
	.  error


state 59
	sentencia : ETIQUETA ':' control .  (9)

	.  reduce 9


state 60
	programa : nombrep '{' sentencias '}' ';' .  (1)

	.  reduce 1


state 61
	const : ID ASIGN . VALOR ';'  (33)

	VALOR  shift 48
	.  error


state 62
	ejecutables : ID ASIGN . expresion  (43)

	ID  shift 47
	.  error

	expresion  goto 49
	termino  goto 50
	funcion  goto 51
	factor  goto 52


state 63
	bloqueEjecutable : bloqueEjecutable ejecutables ';' .  (24)

	.  reduce 24


state 64
	variable : tipo ID .  (37)

	.  reduce 37


state 65
	variable : tipo variables . ',' ID  (36)
	variables : variables . variable  (38)

	UI  shift 41
	F  shift 42
	','  shift 87
	.  error

	tipo  goto 43
	variable  goto 44


state 66
	listaconstantes : listaconstantes ',' const .  (31)

	.  reduce 31


state 67
	retorno_funcion : RETURN . '(' retorno ')' ';'  (41)

	'('  shift 88
	.  error


state 68
	bloqueEjecutable : bloqueEjecutable . ejecutables ';'  (24)
	cuerpoFUN : bloqueEjecutable .  (39)

	ID  shift 37
	IF  shift 6
	OUT  shift 7
	WHEN  shift 9
	'}'  reduce 39

	seleccion  goto 38
	ejecutables  goto 39
	salida  goto 25


state 69
	declaracion_funcion : header_funcion '{' cuerpoFUN . '}' ';'  (29)

	'}'  shift 89
	.  error


state 70
	cuerpoFUN : retorno_funcion .  (40)

	.  reduce 40


state 71
	funcion : ID '(' . parametrosreales ')'  (50)

	ID  shift 47
	.  error

	funcion  goto 51
	parametrosreales  goto 90
	factor  goto 91


state 72
	const : ID ASIGN VALOR ';' .  (33)

	.  reduce 33


state 73
	expresion : expresion '+' . termino  (47)

	ID  shift 47
	.  error

	termino  goto 92
	funcion  goto 51
	factor  goto 52


state 74
	expresion : expresion '-' . termino  (48)

	ID  shift 47
	.  error

	termino  goto 93
	funcion  goto 51
	factor  goto 52


state 75
	termino : termino '*' . factor  (53)

	ID  shift 47
	.  error

	funcion  goto 51
	factor  goto 94


state 76
	termino : termino '/' . factor  (54)

	ID  shift 47
	.  error

	funcion  goto 51
	factor  goto 95


state 77
	condicion : expresion MAYORIGUAL . expresion  (59)

	ID  shift 47
	.  error

	expresion  goto 96
	termino  goto 50
	funcion  goto 51
	factor  goto 52


state 78
	condicion : expresion MENORIGUAL . expresion  (58)

	ID  shift 47
	.  error

	expresion  goto 97
	termino  goto 50
	funcion  goto 51
	factor  goto 52


state 79
	condicion : expresion DISTINTO . expresion  (60)

	ID  shift 47
	.  error

	expresion  goto 98
	termino  goto 50
	funcion  goto 51
	factor  goto 52


state 80
	condicion : expresion IGUAL . expresion  (61)

	ID  shift 47
	.  error

	expresion  goto 99
	termino  goto 50
	funcion  goto 51
	factor  goto 52


state 81
	seleccion : IF '(' condicion ')' . THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF  (62)
	seleccion : IF '(' condicion ')' . THEN '{' bloqueEjecutable '}' END_IF  (63)

	THEN  shift 100
	.  error


state 82
	salida : OUT '(' CADENA ')' .  (64)

	.  reduce 64


state 83
	header_funcion : FUN ID '(' parametros . ')' ':' tipo  (30)

	')'  shift 101
	.  error


state 84
	parametros : variable . ',' variable  (34)
	parametros : variable .  (35)

	','  shift 102
	')'  reduce 35


state 85
	ejecutables : WHEN '(' condicion ')' . THEN '{' sentencias '}'  (46)

	THEN  shift 103
	.  error


state 86
	control : FOR '(' ID ASIGN . VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (10)
	control : FOR '(' ID ASIGN . VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (11)
	control : FOR '(' ID ASIGN . VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (12)

	VALOR  shift 104
	.  error


state 87
	variable : tipo variables ',' . ID  (36)

	ID  shift 105
	.  error


state 88
	retorno_funcion : RETURN '(' . retorno ')' ';'  (41)

	ID  shift 47
	.  error

	expresion  goto 106
	retorno  goto 107
	termino  goto 50
	funcion  goto 51
	factor  goto 52


state 89
	declaracion_funcion : header_funcion '{' cuerpoFUN '}' . ';'  (29)

	';'  shift 108
	.  error


state 90
	funcion : ID '(' parametrosreales . ')'  (50)

	')'  shift 109
	.  error


state 91
	parametrosreales : factor . ',' factor  (51)
	parametrosreales : factor .  (52)

	','  shift 110
	')'  reduce 52


state 92
	expresion : expresion '+' termino .  (47)
	termino : termino . '*' factor  (53)
	termino : termino . '/' factor  (54)

	'*'  shift 75
	'/'  shift 76
	MAYORIGUAL  reduce 47
	MENORIGUAL  reduce 47
	DISTINTO  reduce 47
	IGUAL  reduce 47
	'+'  reduce 47
	'-'  reduce 47
	';'  reduce 47
	')'  reduce 47


state 93
	expresion : expresion '-' termino .  (48)
	termino : termino . '*' factor  (53)
	termino : termino . '/' factor  (54)

	'*'  shift 75
	'/'  shift 76
	MAYORIGUAL  reduce 48
	MENORIGUAL  reduce 48
	DISTINTO  reduce 48
	IGUAL  reduce 48
	'+'  reduce 48
	'-'  reduce 48
	';'  reduce 48
	')'  reduce 48


state 94
	termino : termino '*' factor .  (53)

	.  reduce 53


state 95
	termino : termino '/' factor .  (54)

	.  reduce 54


state 96
	expresion : expresion . '+' termino  (47)
	expresion : expresion . '-' termino  (48)
	condicion : expresion MAYORIGUAL expresion .  (59)

	'+'  shift 73
	'-'  shift 74
	')'  reduce 59


state 97
	expresion : expresion . '+' termino  (47)
	expresion : expresion . '-' termino  (48)
	condicion : expresion MENORIGUAL expresion .  (58)

	'+'  shift 73
	'-'  shift 74
	')'  reduce 58


state 98
	expresion : expresion . '+' termino  (47)
	expresion : expresion . '-' termino  (48)
	condicion : expresion DISTINTO expresion .  (60)

	'+'  shift 73
	'-'  shift 74
	')'  reduce 60


state 99
	expresion : expresion . '+' termino  (47)
	expresion : expresion . '-' termino  (48)
	condicion : expresion IGUAL expresion .  (61)

	'+'  shift 73
	'-'  shift 74
	')'  reduce 61


state 100
	seleccion : IF '(' condicion ')' THEN . '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF  (62)
	seleccion : IF '(' condicion ')' THEN . '{' bloqueEjecutable '}' END_IF  (63)

	'{'  shift 111
	.  error


state 101
	header_funcion : FUN ID '(' parametros ')' . ':' tipo  (30)

	':'  shift 112
	.  error


state 102
	parametros : variable ',' . variable  (34)

	UI  shift 41
	F  shift 42
	.  error

	tipo  goto 43
	variable  goto 113


state 103
	ejecutables : WHEN '(' condicion ')' THEN . '{' sentencias '}'  (46)

	'{'  shift 114
	.  error


state 104
	control : FOR '(' ID ASIGN VALOR . ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (10)
	control : FOR '(' ID ASIGN VALOR . ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (11)
	control : FOR '(' ID ASIGN VALOR . ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (12)

	';'  shift 115
	.  error


state 105
	variable : tipo variables ',' ID .  (36)

	.  reduce 36


state 106
	retorno : expresion .  (42)
	expresion : expresion . '+' termino  (47)
	expresion : expresion . '-' termino  (48)

	'+'  shift 73
	'-'  shift 74
	')'  reduce 42


state 107
	retorno_funcion : RETURN '(' retorno . ')' ';'  (41)

	')'  shift 116
	.  error


state 108
	declaracion_funcion : header_funcion '{' cuerpoFUN '}' ';' .  (29)

	.  reduce 29


state 109
	funcion : ID '(' parametrosreales ')' .  (50)

	.  reduce 50


state 110
	parametrosreales : factor ',' . factor  (51)

	ID  shift 47
	.  error

	funcion  goto 51
	factor  goto 117


state 111
	seleccion : IF '(' condicion ')' THEN '{' . bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF  (62)
	seleccion : IF '(' condicion ')' THEN '{' . bloqueEjecutable '}' END_IF  (63)

	ID  shift 37
	IF  shift 6
	OUT  shift 7
	WHEN  shift 9
	.  error

	bloqueEjecutable  goto 118
	seleccion  goto 38
	ejecutables  goto 18
	salida  goto 25


state 112
	header_funcion : FUN ID '(' parametros ')' ':' . tipo  (30)

	UI  shift 41
	F  shift 42
	.  error

	tipo  goto 119


state 113
	parametros : variable ',' variable .  (34)

	.  reduce 34


state 114
	ejecutables : WHEN '(' condicion ')' THEN '{' . sentencias '}'  (46)

	ID  shift 5
	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	FOR  shift 10
	ETIQUETA  shift 11
	.  error

	sentencias  goto 120
	sentencia  goto 13
	bloqueDeclarativa  goto 14
	bloqueEjecutable  goto 15
	control  goto 16
	seleccion  goto 17
	ejecutables  goto 18
	declarativa  goto 19
	variables  goto 20
	declaracion_funcion  goto 21
	listaconstantes  goto 22
	header_funcion  goto 23
	const  goto 24
	salida  goto 25


state 115
	control : FOR '(' ID ASIGN VALOR ';' . condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (10)
	control : FOR '(' ID ASIGN VALOR ';' . condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (11)
	control : FOR '(' ID ASIGN VALOR ';' . condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (12)

	ID  shift 121
	.  error

	condicion_for  goto 122


state 116
	retorno_funcion : RETURN '(' retorno ')' . ';'  (41)

	';'  shift 123
	.  error


state 117
	parametrosreales : factor ',' factor .  (51)

	.  reduce 51


state 118
	bloqueEjecutable : bloqueEjecutable . ejecutables ';'  (24)
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable . '}' ELSE '{' bloqueEjecutable '}' END_IF  (62)
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable . '}' END_IF  (63)

	ID  shift 37
	IF  shift 6
	OUT  shift 7
	WHEN  shift 9
	'}'  shift 124
	.  error

	seleccion  goto 38
	ejecutables  goto 39
	salida  goto 25


state 119
	header_funcion : FUN ID '(' parametros ')' ':' tipo .  (30)

	.  reduce 30


state 120
	sentencias : sentencias . sentencia  (3)
	ejecutables : WHEN '(' condicion ')' THEN '{' sentencias . '}'  (46)

	ID  shift 5
	IF  shift 6
	OUT  shift 7
	FUN  shift 8
	WHEN  shift 9
	FOR  shift 10
	ETIQUETA  shift 11
	'}'  shift 125
	.  error

	sentencia  goto 34
	bloqueDeclarativa  goto 14
	bloqueEjecutable  goto 15
	control  goto 16
	seleccion  goto 17
	ejecutables  goto 18
	declarativa  goto 19
	variables  goto 20
	declaracion_funcion  goto 21
	listaconstantes  goto 22
	header_funcion  goto 23
	const  goto 24
	salida  goto 25


state 121
	condicion_for : ID . MAYORIGUAL expresion  (20)
	condicion_for : ID . MENORIGUAL expresion  (21)

	MAYORIGUAL  shift 126
	MENORIGUAL  shift 127
	.  error


state 122
	control : FOR '(' ID ASIGN VALOR ';' condicion_for . ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (10)
	control : FOR '(' ID ASIGN VALOR ';' condicion_for . ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (11)
	control : FOR '(' ID ASIGN VALOR ';' condicion_for . ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (12)

	';'  shift 128
	.  error


state 123
	retorno_funcion : RETURN '(' retorno ')' ';' .  (41)

	.  reduce 41


state 124
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' . ELSE '{' bloqueEjecutable '}' END_IF  (62)
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' . END_IF  (63)

	ELSE  shift 129
	END_IF  shift 130
	.  error


state 125
	ejecutables : WHEN '(' condicion ')' THEN '{' sentencias '}' .  (46)

	.  reduce 46


state 126
	condicion_for : ID MAYORIGUAL . expresion  (20)

	ID  shift 47
	.  error

	expresion  goto 131
	termino  goto 50
	funcion  goto 51
	factor  goto 52


state 127
	condicion_for : ID MENORIGUAL . expresion  (21)

	ID  shift 47
	.  error

	expresion  goto 132
	termino  goto 50
	funcion  goto 51
	factor  goto 52


state 128
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' . '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (10)
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' . '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (11)
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' . VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (12)

	VALOR  shift 133
	'+'  shift 134
	'-'  shift 135
	.  error


state 129
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' ELSE . '{' bloqueEjecutable '}' END_IF  (62)

	'{'  shift 136
	.  error


state 130
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' END_IF .  (63)

	.  reduce 63


state 131
	condicion_for : ID MAYORIGUAL expresion .  (20)
	expresion : expresion . '+' termino  (47)
	expresion : expresion . '-' termino  (48)

	'+'  shift 73
	'-'  shift 74
	';'  reduce 20


state 132
	condicion_for : ID MENORIGUAL expresion .  (21)
	expresion : expresion . '+' termino  (47)
	expresion : expresion . '-' termino  (48)

	'+'  shift 73
	'-'  shift 74
	';'  reduce 21


state 133
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' VALOR . ')' '{' bloqueEjecutableFOR '}' ';'  (12)

	')'  shift 137
	.  error


state 134
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' . VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (10)

	VALOR  shift 138
	.  error


state 135
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' . VALOR ')' '{' bloqueEjecutableFOR '}' ';'  (11)

	VALOR  shift 139
	.  error


state 136
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' ELSE '{' . bloqueEjecutable '}' END_IF  (62)

	ID  shift 37
	IF  shift 6
	OUT  shift 7
	WHEN  shift 9
	.  error

	bloqueEjecutable  goto 140
	seleccion  goto 38
	ejecutables  goto 18
	salida  goto 25


state 137
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' VALOR ')' . '{' bloqueEjecutableFOR '}' ';'  (12)

	'{'  shift 141
	.  error


state 138
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR . ')' '{' bloqueEjecutableFOR '}' ';'  (10)

	')'  shift 142
	.  error


state 139
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR . ')' '{' bloqueEjecutableFOR '}' ';'  (11)

	')'  shift 143
	.  error


state 140
	bloqueEjecutable : bloqueEjecutable . ejecutables ';'  (24)
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable . '}' END_IF  (62)

	ID  shift 37
	IF  shift 6
	OUT  shift 7
	WHEN  shift 9
	'}'  shift 144
	.  error

	seleccion  goto 38
	ejecutables  goto 39
	salida  goto 25


state 141
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' . bloqueEjecutableFOR '}' ';'  (12)

	ID  shift 37
	IF  shift 6
	OUT  shift 7
	BREAK  shift 145
	WHEN  shift 9
	.  error

	seleccion  goto 38
	bloqueEjecutableFOR  goto 146
	ejecutables  goto 147
	salida  goto 25


state 142
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' . '{' bloqueEjecutableFOR '}' ';'  (10)

	'{'  shift 148
	.  error


state 143
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' . '{' bloqueEjecutableFOR '}' ';'  (11)

	'{'  shift 149
	.  error


state 144
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' . END_IF  (62)

	END_IF  shift 150
	.  error


state 145
	bloqueEjecutableFOR : BREAK . ETIQUETA ';'  (17)
	bloqueEjecutableFOR : BREAK . ';'  (18)
	bloqueEjecutableFOR : BREAK . expresion ';'  (19)

	ID  shift 47
	ETIQUETA  shift 151
	';'  shift 152
	.  error

	expresion  goto 153
	termino  goto 50
	funcion  goto 51
	factor  goto 52


state 146
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR . '}' ';'  (12)
	bloqueEjecutableFOR : bloqueEjecutableFOR . ejecutables ';'  (13)
	bloqueEjecutableFOR : bloqueEjecutableFOR . BREAK ';'  (14)
	bloqueEjecutableFOR : bloqueEjecutableFOR . ':' BREAK ETIQUETA ';'  (15)

	ID  shift 37
	IF  shift 6
	OUT  shift 7
	BREAK  shift 154
	WHEN  shift 9
	'}'  shift 155
	':'  shift 156
	.  error

	seleccion  goto 38
	ejecutables  goto 157
	salida  goto 25


state 147
	bloqueEjecutableFOR : ejecutables . ';'  (16)

	';'  shift 158
	.  error


state 148
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' . bloqueEjecutableFOR '}' ';'  (10)

	ID  shift 37
	IF  shift 6
	OUT  shift 7
	BREAK  shift 145
	WHEN  shift 9
	.  error

	seleccion  goto 38
	bloqueEjecutableFOR  goto 159
	ejecutables  goto 147
	salida  goto 25


state 149
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' . bloqueEjecutableFOR '}' ';'  (11)

	ID  shift 37
	IF  shift 6
	OUT  shift 7
	BREAK  shift 145
	WHEN  shift 9
	.  error

	seleccion  goto 38
	bloqueEjecutableFOR  goto 160
	ejecutables  goto 147
	salida  goto 25


state 150
	seleccion : IF '(' condicion ')' THEN '{' bloqueEjecutable '}' ELSE '{' bloqueEjecutable '}' END_IF .  (62)

	.  reduce 62


state 151
	bloqueEjecutableFOR : BREAK ETIQUETA . ';'  (17)

	';'  shift 161
	.  error


state 152
	bloqueEjecutableFOR : BREAK ';' .  (18)

	.  reduce 18


state 153
	bloqueEjecutableFOR : BREAK expresion . ';'  (19)
	expresion : expresion . '+' termino  (47)
	expresion : expresion . '-' termino  (48)

	'+'  shift 73
	'-'  shift 74
	';'  shift 162
	.  error


state 154
	bloqueEjecutableFOR : bloqueEjecutableFOR BREAK . ';'  (14)

	';'  shift 163
	.  error


state 155
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' . ';'  (12)

	';'  shift 164
	.  error


state 156
	bloqueEjecutableFOR : bloqueEjecutableFOR ':' . BREAK ETIQUETA ';'  (15)

	BREAK  shift 165
	.  error


state 157
	bloqueEjecutableFOR : bloqueEjecutableFOR ejecutables . ';'  (13)

	';'  shift 166
	.  error


state 158
	bloqueEjecutableFOR : ejecutables ';' .  (16)

	.  reduce 16


state 159
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR . '}' ';'  (10)
	bloqueEjecutableFOR : bloqueEjecutableFOR . ejecutables ';'  (13)
	bloqueEjecutableFOR : bloqueEjecutableFOR . BREAK ';'  (14)
	bloqueEjecutableFOR : bloqueEjecutableFOR . ':' BREAK ETIQUETA ';'  (15)

	ID  shift 37
	IF  shift 6
	OUT  shift 7
	BREAK  shift 154
	WHEN  shift 9
	'}'  shift 167
	':'  shift 156
	.  error

	seleccion  goto 38
	ejecutables  goto 157
	salida  goto 25


state 160
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR . '}' ';'  (11)
	bloqueEjecutableFOR : bloqueEjecutableFOR . ejecutables ';'  (13)
	bloqueEjecutableFOR : bloqueEjecutableFOR . BREAK ';'  (14)
	bloqueEjecutableFOR : bloqueEjecutableFOR . ':' BREAK ETIQUETA ';'  (15)

	ID  shift 37
	IF  shift 6
	OUT  shift 7
	BREAK  shift 154
	WHEN  shift 9
	'}'  shift 168
	':'  shift 156
	.  error

	seleccion  goto 38
	ejecutables  goto 157
	salida  goto 25


state 161
	bloqueEjecutableFOR : BREAK ETIQUETA ';' .  (17)

	.  reduce 17


state 162
	bloqueEjecutableFOR : BREAK expresion ';' .  (19)

	.  reduce 19


state 163
	bloqueEjecutableFOR : bloqueEjecutableFOR BREAK ';' .  (14)

	.  reduce 14


state 164
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' VALOR ')' '{' bloqueEjecutableFOR '}' ';' .  (12)

	.  reduce 12


state 165
	bloqueEjecutableFOR : bloqueEjecutableFOR ':' BREAK . ETIQUETA ';'  (15)

	ETIQUETA  shift 169
	.  error


state 166
	bloqueEjecutableFOR : bloqueEjecutableFOR ejecutables ';' .  (13)

	.  reduce 13


state 167
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' . ';'  (10)

	';'  shift 170
	.  error


state 168
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' . ';'  (11)

	';'  shift 171
	.  error


state 169
	bloqueEjecutableFOR : bloqueEjecutableFOR ':' BREAK ETIQUETA . ';'  (15)

	';'  shift 172
	.  error


state 170
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '+' VALOR ')' '{' bloqueEjecutableFOR '}' ';' .  (10)

	.  reduce 10


state 171
	control : FOR '(' ID ASIGN VALOR ';' condicion_for ';' '-' VALOR ')' '{' bloqueEjecutableFOR '}' ';' .  (11)

	.  reduce 11


state 172
	bloqueEjecutableFOR : bloqueEjecutableFOR ':' BREAK ETIQUETA ';' .  (15)

	.  reduce 15


State 14 contains 2 shift/reduce conflicts.
State 15 contains 4 shift/reduce conflicts.


34 terminals, 31 nonterminals
67 grammar rules, 173 states
